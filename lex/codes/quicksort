prog quicksort;

func quicksort(
        minha_lista : vetor de inteiro, n : inteiro, ini_vet : inteiro, fim_vet : inteiro) : 
        vetor de inteiro ;
    
    var i, j, pivo, aux : inteiro;
    
inicio
   i = ini_vet;
   j = fim_vet;
   
   pivo = minha_lista[(ini_vet + fim_vet) / 2];
        enquanto(i < j) inicio
            enquanto (minha_lista[i] < pivo) fazer inicio
                i = i + 1;
            fim;
            enquanto (minha_lista[j] > pivo) fazer inicio
                j = j - 1;
            fim;
            se (i < j) entao inicio
                aux  = minha_lista[i];
                minha_lista[i] = minha_lista[j];
                minha_lista[j] = aux;
                i = i + 1;
                j = j - 1;
            fim;
        fim;
        
        se (ini_vet < j) entao inicio
            quicksort(minha_lista, ini_vet, j);
        fim;
        
        se (i < fim_vet) entao inicio
            quicksort(minha_lista, i, fim_vet);
        fim;
fim

var i : inteiro;

inicio
    lista_ord = quicksort([3, 2, 6, 1, 9, 0], 6, 0, 5);
    
    para (i = 0; i < 6; i++) fazer inicio
        escrever(lista_ord[i]);
    fim
fim

(*
CÃ“DIGO EM PASCAL:



*)